# apiVersion: extensions/v1beta1
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: backend-feed
  name: backend-feed
spec:
  replicas: 1
  selector:
    matchLabels:
      service: backend-feed
  template:
    metadata:
      labels:
        service: backend-feed
    spec:
      containers:
      - image: tugboatstrike/udagram-api-feed:v1
        name: backend-feed
        # needs to be the node name? no
        # name: udagram-node-group
        # name: udagram-api-feed
        # imagePullPolicy: Always 
        ports:
        - containerPort: 80 
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            # memory: "1024Mi"
            memory: "2048Mi"
            cpu: "500m"                  
        env:
        #- name: POSTGRES_PORT
        #  valueFrom:
        #    configMapKeyRef:
        #      name: postgres-port
        #      key: POSTGRES_PORT
        
        #- name: POSTGRES_DIALECT
        #  valueFrom:
        #    configMapKeyRef:
              # name: postgres-dialect
        #      name: env-configmap
        #      key: POSTGRES_DIALECT
        
        
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              # name: aws-profile
              name: env-configmap
              key: AWS_PROFILE
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              # name: aws-region
              name: env-configmap
              key: AWS_REGION
        
        #- name: POSTGRES_DATABASE
        #  valueFrom:
        #    configMapKeyRef:
        #      # name: postgres-database
        #      name: env-configmap
        #      key: POSTGRES_DATABASE
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              # name: postgres-database
              name: env-configmap
              key: POSTGRES_DB
        
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_USERNAME  
        #- name: AWS_MEDIA_BUCKET
        #  valueFrom:
        #    # configMapKeyRef:
        #      # name: aws-media-bucket
        #      # name: env-configmap
        #    secretKeyRef:
        #      name: env-secret
        #      key: AWS_MEDIA_BUCKET
        - name: AWS_BUCKET
          valueFrom:
            # configMapKeyRef:
              # name: aws-media-bucket
              # name: env-configmap
            secretKeyRef:
              name: env-secret
              key: AWS_BUCKET
        - name: JWT_SECRET
          valueFrom:
            # configMapKeyRef:
              # name: jwt-secret
            secretKeyRef:
              name: env-secret
              key: JWT_SECRET
        - name: POSTGRES_HOST
          valueFrom:
            # configMapKeyRef:
              # name: postgres-host
              # name: env-configmap
            secretKeyRef:
              name: env-secret
              key: POSTGRES_HOST
        - name: URL
          valueFrom:
            # configMapKeyRef:
              # name: url
            #  name: env-configmap
            secretKeyRef:
              name: env-secret
              key: URL
        - name: PORT
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: PORT
        volumeMounts:
        - name: aws-secret
          mountPath: "/root/.aws"
          readOnly: true        
      # restartPolicy: Always
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret